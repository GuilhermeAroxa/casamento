{"version":3,"sources":["Components/Header.js","Components/Footer.js","Components/About.js","Components/Resume.js","Components/Video.js","Components/Portfolio.js","App.js","registerServiceWorker.js","index.js"],"names":["Header","this","props","data","project","github","name","description","wallpaperImage","address","city","social","map","network","key","href","url","className","id","style","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","title","Component","Footer","About","primePic","imagePrime","local","src","alt","width","height","frameBorder","scrolling","marginHeight","marginWidth","dangerouslySetInnerHTML","__html","Resume","color","i","Math","floor","random","presentMessage","giftList","onClick","window","location","link","work","company","years","skills","toLowerCase","level","backgroundColor","getRandomColor","Video","Portfolio","state","open","videoId","projects","projectImage","image","e","preventDefault","setState","category","saveToF","channel","autoplay","isOpen","onClose","App","foo","resumeData","ReactGA","initialize","pageview","pathname","$","ajax","dataType","cache","success","bind","error","xhr","status","err","console","log","alert","getResumeData","main","portfolio","resume","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.d0a8414d.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Header extends Component {\n  render() {\n\n    if(this.props.data){\n       var project = this.props.data.project;\n       var github = this.props.data.github;\n      var name = this.props.data.name;\n      var description= this.props.data.description;\n      var wallpaperImage= \"images/img.png\";\n      var city= this.props.data.address.city;\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <header id=\"home\" style={{backgroundImage:`url(${wallpaperImage})`, backgroundRepeat:`no-repeat`, backgroundSize: `100%`, backgroundPosition:`top left`}}>\n      \n      <nav id=\"nav-wrap\">\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            {/* <li><a className=\"smoothscroll\" href=\"#nossa-historia\">Nossa História</a></li> */}\n            <li><a className=\"smoothscroll\" href=\"#padrinhos\">Padrinhos</a></li>\n            <li><a className=\"smoothscroll\" href=\"#lista-de-presentes\">Presentes</a></li>\n            <li><a className=\"smoothscroll\" href=\"#localizacao\">Localização</a></li>\n         </ul>\n      </nav>\n\n      <div className=\"row banner\">\n      \n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">{name}</h1>\n            <h3 className=\"description-use-background\">{description}.</h3>\n            <hr />\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#padrinhos\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              <b>Esperamos vocês lá!</b>\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2017 Nordic Giant</li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    if(this.props.data){\n      var primePic= \"images/\"+this.props.data.imagePrime;\n      var local = this.props.data.local;\n    }\n\n    return (\n      <section id=\"localizacao\">\n      <div className=\"row\">\n         <div className=\"three columns\">\n            <img className=\"profile-pic\"  src={primePic} alt=\"Nordic Giant Profile Pic\" />\n         </div>\n         <div className=\"nine columns main-col\">\n            <h2>Localização</h2>\n            <p>{local}</p>\n            <div className=\"mapouter\"><div className=\"gmap_canvas\">\n            <iframe width={400} height={250} id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q=Espa%C3%A7o%20Prime%20Eventos%20-%20Unnamed%20Rd%2CRibeir%C3%A3o%20Preto%20-%20SP&t=&z=13&ie=UTF8&iwloc=&output=embed\" frameBorder={0} scrolling=\"no\" marginHeight={0} marginWidth={0}>\n            </iframe><a href=\"https://torrent9-fr.com\">torrent9 search</a></div>\n            <style dangerouslySetInnerHTML={{__html: \".mapouter{position:relative;text-align:right;height:250px;width:400px;}.gmap_canvas {overflow:hidden;background:none!important;height:250px;width:400px;}\\n               \" }} />\n         </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Resume extends Component {\n\n  getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for (var i = 0; i < 6; i++) {\n      color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n  }\n  \n  render() {\n\n    if(this.props.data){\n      var presentMessage = this.props.data.presentMessage;\n      var giftList = this.props.data.giftList.map(function(giftList){\n        return <div key={giftList.title}><h3>{giftList.title}</h3>\n        <p className=\"info\">{giftList.description}</p>\n        <button onClick={() => { window.location = giftList.link }}>Nossa Lista</button></div>\n      })\n      var work = this.props.data.work.map(function(work){\n        return <div key={work.company}><h3>{work.company}</h3>\n            <p className=\"info\">{work.title}<span>&bull;</span> <em className=\"date\">{work.years}</em></p>\n            <p>{work.description}</p>\n        </div>\n      })\n\n      var skills = this.props.data.skills.map((skills)=>{\n        var className = 'bar-expand '+skills.name.toLowerCase();\n        return (\n          <li key={skills.name}>\n            <span style={{width:skills.level, backgroundColor:this.getRandomColor()}}className={className}></span><em>{skills.name}</em>\n          </li>\n        )\n      })\n    }\n\n    return (\n      <section id=\"lista-de-presentes\">\n\n      <div className=\"row education\">\n         <div className=\"three columns header-col\">\n            <h1><span>Lista de Presentes</span></h1>\n         </div>\n\n         <div className=\"nine columns main-col\">\n            <div className=\"row item\">\n               <div className=\"twelve columns\">\n                 {giftList}\n               </div>\n            </div>\n         </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nexport default Resume;\n","import React, { Component } from 'react';\n\nvar sizeImage = 10;\n\nclass Video extends Component {\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState({ time: Date.now() }), 1000);\n  }\n  componentWillUnmount() {\n  }\n\n  render() {\n\n    if(this.props.data){\n      var message = this.props.data.contactmessage;\n    }\n\n    return (\n      <section id=\"nossa-historia\">\n         <div className=\"row\">\n            <div className=\"\">\n              <div className=\"\" id=\"photo-slider-container\">\n                {/* <img id=\"image-slider\" className=\"photos-fade\" style={{width:`${getSize()}%`, marginLeft:`${getMarginLeft()}%`, marginTop:`${getMarginTop()}%`, bottom:`0`}} src={\"images/slider/\"+ (Math.floor(Math.random() * 9) + 1) +\".jpeg\"} />              \n                <img id=\"image-slider\" className=\"photos-fade\" style={{width:`${getSize()}%`, marginLeft:`${getMarginLeft()}%`, marginTop:`${getMarginTop()}%`, bottom:`0`}} src={\"images/slider/\"+ (Math.floor(Math.random() * 9) + 1) +\".jpeg\"} />              \n                <img id=\"image-slider\" className=\"photos-fade\" style={{width:`${getSize()}%`, marginLeft:`${getMarginLeft()}%`, marginTop:`${getMarginTop()}%`, bottom:`0`}} src={\"images/slider/\"+ (Math.floor(Math.random() * 9) + 1) +\".jpeg\"} />               */}\n                <img className=\"center\" id=\"imagegif\"src={\"images/slider/montagem.gif\"} />\n              </div>\n           </div>\n      </div>\n   </section>\n    );\n  }\n}\n\nfunction getSize() {\n  sizeImage = (Math.floor(Math.random() * 23) + 10) \n  return sizeImage;\n} \n\nfunction getMarginLeft() {\n  if(sizeImage > 35){\n    return Math.floor(Math.random() * 11);\n  } else {\n    return Math.floor(Math.random() * 71);\n  }\n} \n\nfunction getMarginTop() {\n  if(sizeImage > 35){\n    return Math.floor(Math.random() * 11);\n  } else {\n    return Math.floor(Math.random() * 31);\n  }\n} \n\n\nexport default Video;\n","import React, { Component, useState } from 'react';\nimport ModalVideo from 'react-modal-video'\n\nclass Portfolio extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false,\n      videoId: ''\n    };\n  }\n  \n  saveToF() {\n  }\n\n  render() {\n\n    if (this.props.data) {\n      var projects = this.props.data.projects.map( (projects) => {\n        var projectImage = 'images/padrinhos/' + projects.image;\n        \n        return (\n          <div key={projects.title} className=\"columns portfolio-item\">\n            <div className=\"item-wrap\">\n              <a href=\"\" title={projects.title} onClick={(e) => {e.preventDefault(); this.setState({ videoId: projects.url, open: true })}}>\n                <img alt={projects.title} src={projectImage} className=\"pic-size\" />\n                <div className=\"overlay\">\n                  <div className=\"portfolio-item-meta\">\n                    <h5>{projects.title}</h5>\n                    <p>{projects.category}</p>\n                  </div>\n                </div>\n              </a>\n            </div>\n            <div className=\"clearfix\"></div>\n          </div>\n        )\n      })\n    }\n\n    return (\n      <section id=\"padrinhos\">\n\n        <div className=\"row\">\n\n          <div className=\"twelve columns collapsed\">\n\n            <h1 onClick={this.saveToF()}>Nossos Padrinhos</h1>\n\n            <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n              {projects}\n            </div>\n          </div>\n        </div>\n        <ModalVideo channel='youtube' autoplay isOpen={this.state.open} videoId={this.state.videoId} onClose={() => this.setState({ open: false })} />\n      </section>\n    );\n  }\n}\n\nexport default Portfolio;\n","import React, { Component } from 'react';\nimport ReactGA from 'react-ga';\nimport $ from 'jquery';\nimport './App.scss';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\nimport Resume from './Components/Resume';\nimport Video from './Components/Video';\nimport Portfolio from './Components/Portfolio';\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      foo: 'bar',\n      resumeData: {}\n    };\n\n    ReactGA.initialize('UA-110570651-1');\n    ReactGA.pageview(window.location.pathname);\n\n  }\n\n  getResumeData(){\n    $.ajax({\n      url:'./resumeData.json',\n      dataType:'json',\n      cache: false,\n      success: function(data){\n        this.setState({resumeData: data});\n      }.bind(this),\n      error: function(xhr, status, err){\n        console.log(err);\n        alert(err);\n      }\n    });\n  }\n\n  componentDidMount(){\n    this.getResumeData();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header data={this.state.resumeData.main}/>\n        {/* <Video data={this.state.resumeData.main}/> */}\n        <Portfolio data={this.state.resumeData.portfolio}/>\n        <Resume data={this.state.resumeData.resume}/>\n        <About data={this.state.resumeData.main}/>\n        <Footer data={this.state.resumeData.main}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}